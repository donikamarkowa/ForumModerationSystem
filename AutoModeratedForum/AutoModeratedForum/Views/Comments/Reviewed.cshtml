@model IEnumerable<AutoModeratedForum.Entities.ModerationRequest>
@using AutoModeratedForum.Enums
@{
    ViewData["Title"] = "Reviewed Comments";
}

<h2 class="mb-4">Reviewed Moderation Requests</h2>

@if (!Model.Any())
{
    <div class="alert alert-secondary fst-italic">
        No reviewed moderation requests found.
    </div>
}
else
{
    <div id="reviewed-moderation-requests" class="row g-4">
        @foreach (var request in Model)
        {
            var comment = request.Comment;
            var statusBadge = request.Decision switch
            {
                ModerationDecision.Approved => ("Approved", "success"),
                ModerationDecision.Rejected => ("Rejected", "danger"),
                _ => ("Pending", "warning")
            };

            <div class="col-12 col-md-6 col-lg-4">
                <div class="card shadow-sm h-100 border-0 rounded-4" style="transition: transform 0.2s ease, box-shadow 0.2s ease;">
                    <div class="card-body d-flex flex-column">
                        <p class="card-text flex-grow-1 text-break" style="font-size: 0.95rem; color: #222;">
                            <strong>Comment:</strong> @comment.Content
                        </p>

                        <ul class="list-unstyled mb-3 small text-muted" style="font-size: 0.85rem;">
                            <li><strong>Created at:</strong> @comment.CreatedAt.ToLocalTime().ToString("g")</li>
                            <li><strong>Reviewed at:</strong> @(request.ReviewedAt?.ToLocalTime().ToString("g") ?? "N/A")</li>
                            <li><strong>Moderator:</strong> @request.Moderator?.Email ?? "Unknown"</li>
                            <li>
                                <strong>Status:</strong>
                                <span class="badge bg-@statusBadge.Item2">@statusBadge.Item1</span>
                            </li>
                        </ul>

                        @if (!string.IsNullOrWhiteSpace(request.Notes))
                        {
                            <p class="mb-2">
                                <a class="btn btn-sm btn-outline-primary" data-bs-toggle="collapse" href="#notes-@request.Id" role="button" aria-expanded="false" aria-controls="notes-@request.Id">
                                    Show Notes
                                </a>
                            </p>
                            <div class="collapse" id="notes-@request.Id">
                                <div class="card card-body bg-light rounded-3 py-2 px-3" style="font-size: 0.9rem; line-height: 1.3;">
                                    @request.Notes
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        document.querySelectorAll('.card').forEach(card => {
            card.addEventListener('mouseenter', () => {
                card.style.transform = 'translateY(-5px)';
                card.style.boxShadow = '0 10px 20px rgba(0,0,0,0.12)';
            });
            card.addEventListener('mouseleave', () => {
                card.style.transform = '';
                card.style.boxShadow = '';
            });
        });
    </script>
}
